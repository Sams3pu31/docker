1) Что такое Docker и для чего он используется?

Docker — это платформа для автоматизации развертывания приложений в контейнерах. Контейнеры обеспечивают изоляцию приложений и их зависимостей, что позволяет гарантировать одинаковое поведение на всех этапах разработки, тестирования и продакшена. Docker упрощает управление средами, повышает масштабируемость и облегчает процесс развертывания.

2) Как установить Docker на компьютер?

Для установки Docker на компьютер выполните следующие шаги:
1. Перейдите на официальный сайт Docker  и скачайте Docker Desktop для вашей операционной системы.
2. Запустите установочный файл и следуйте инструкциям установщика.

3) Как запустить контейнер с помощью Docker?

Чтобы запустить контейнер с помощью Docker, выполните следующие шаги:
1. Убедитесь, что Docker запущен.
2. Откройте терминал.
3. Используйте команду `docker run <имя_образа>` для запуска контейнера из образа.

4) Как создать свой образ контейнера с помощью Dockerfile?

Для создания своего образа контейнера с помощью Dockerfile выполните следующие шаги:
1. Создайте файл с именем `Dockerfile` в корневой директории вашего проекта.
2. Определите инструкции для создания образа в Dockerfile.
3. В терминале перейдите в директорию с Dockerfile и выполните команду:

   docker build -t <имя_образа> .


5)Что такое CI/CD?

CI/CD (Continuous Integration/Continuous Deployment) — это методология разработки,
которая позволяет автоматизировать процесс интеграции изменений в кодовую базу и их развертывания.
CI/CD включает в себя непрерывную интеграцию (Continuous Integration), непрерывную доставку (Continuous Delivery)
и непрерывное развертывание (Continuous Deployment).

6) Как Docker участвует в процессе CI/CD?

Docker активно используется в процессе CI/CD для автоматизации и изоляции этапов сборки,
тестирования и развертывания приложений.
Контейнеры Docker обеспечивают единообразие сред разработки и продакшена,
что минимизирует проблемы, связанные с "работает у меня на компьютере".
В CI/CD пайплайнах Docker позволяет:
1. Создавать и тестировать образы контейнеров.
2. Автоматически развертывать контейнеры в тестовые и продакшен среды.
3. Упрощать управление зависимостями и конфигурациями приложений.
